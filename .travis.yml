# @file
# .travis.yml - PKP Plugins Integration

env:
  - PKP_ENVIRONMENT="ojs-stable-3_0_1"
  - PKP_ENVIRONMENT="ojs-stable-3_0_2"
  matrix:
  #- TEST=validation
  - TEST=pgsql
  - TEST=mysql
  global:
  - TEST_CURRENT_PKP_PLUGIN="1"
  - PKP_PLUGIN_CATEGORY=""
  - PKP_PLUGIN_NAME=""
  - secure: "nxosaZUBRaYhk8+LHaDnVgMIveiK4zewiXW5Fw5TtB/D6V67oASufil1uhcayyzIBwnrZZmrFPLhXm0Lm1RiQHrsftffcMB5JlWK9R9EyWpyd87ewqWy3kXBAvsXXTU6ihGiaFpklhVCKt7XcDSR8bWEb2NVWrM7JS7dHDKMwaA="
  
language: php

sudo: required

php:
  #- 5.3
  - 5.6
python:
  - 3.3
addons:
  postgresql: "9.1"
git:
  # We have to init submodules ourselves to make it recursive
  submodules: false

before_install:
  - mkdir -p "./ojs-3"
  - cd "./ojs-3/"
  - git clone --depth 10 --recursive -b $PKP_ENVIRONMENT https://github.com/pkp/ojs.git
  - git clone -b $TRAVIS_BRANCH https://github.com/$TRAVIS_REPO_SLUG.git $TRAVIS_REPO_SLUG
  - PKP_PLUGIN_NAME=$(grep -oP '(?<=application>)[^<]+' "./$TRAVIS_REPO_SLUG/version.xml")
  - PKP_PLUGIN_CATEGORY_H=$(grep -oP '(?<=type>)[^<]+' "./$TRAVIS_REPO_SLUG/version.xml")
  - echo $PKP_PLUGIN_NAME
  - echo $PKP_PLUGIN_CATEGORY_H
  - category=$(echo $PKP_PLUGIN_CATEGORY_H | grep -o '[^-]*$')
  - PKP_PLUGIN_CATEGORY=$(echo $category | cut -d. -f2)
  - echo $PKP_PLUGIN_CATEGORY

install:
  - cd ojs

  # Start submodules
  - ./tools/startSubmodulesTRAVIS.sh

  - cd ./lib/pkp 

  # Install composer dependencies
  - composer update 
  - cd ../..

  - cd "./plugins/$PKP_PLUGIN_CATEGORY/"
  - if [ -d "$PKP_PLUGIN_NAME" ]; then rm -r $PKP_PLUGIN_NAME; fi
  - git clone -b $TRAVIS_BRANCH https://github.com/$TRAVIS_REPO_SLUG.git $PKP_PLUGIN_NAME

  - cd ../..
  - chmod +x ./plugins/$PKP_PLUGIN_CATEGORY/$PKP_PLUGIN_NAME/tools/travis/run-tests.sh
  - chmod +x ./plugins/$PKP_PLUGIN_CATEGORY/$PKP_PLUGIN_NAME/tools/travis/runAllTests.sh
  - chmod +x ./plugins/$PKP_PLUGIN_CATEGORY/$PKP_PLUGIN_NAME/tools/travis/prepare-code-coverage.sh
  # Configure the webserver
  - if [[ "$TEST" != "validation" ]]; then ./lib/pkp/tools/travis/prepare-webserver.sh; fi

  # Start xvfb
  - if [[ "$TEST" != "validation" ]]; then ./lib/pkp/tools/travis/start-xvfb.sh; fi

  # Start Selenium
  - if [[ "$TEST" != "validation" ]]; then ./lib/pkp/tools/travis/start-selenium.sh; fi

  # Prepare code coverage
  - if [[ "$TEST" == "mysql" ]]; then ./plugins/$PKP_PLUGIN_CATEGORY/$PKP_PLUGIN_NAME/tools/travis/prepare-code-coverage.sh; fi

  # Install the JS linter
  - if [[ "$TEST" == "validation" ]]; then ./lib/pkp/tools/travis/install-linter.sh; fi
  
script:
  - if [[ "$TEST_CURRENT_PKP_PLUGIN" == "1" ]]; then if [[ "$TEST" != "validation" ]]; then ./plugins/$PKP_PLUGIN_CATEGORY/$PKP_PLUGIN_NAME/tools/travis/run-tests.sh; fi else if [[ "$TEST" != "validation" ]]; then ./lib/pkp/tools/travis/run-tests.sh; fi fi
  - if [[ "$TEST" == "validation" ]]; then ./lib/pkp/tools/travis/validate-xml.sh && ./lib/pkp/tools/buildjs.sh; fi
  
after_script:
  # Merge the coverage reports into one HTML report and upload to http://pkp.sfu.ca/test-coverage 
  - if [[ "$TEST" == "mysql" ]]; then ./lib/pkp/tools/travis/post-code-coverage.sh; fi

  # Upload the completed database to the PKP server for other uses
  - if [[ "$TEST" != "validation" ]]; then ./lib/pkp/tools/travis/post-data-build.sh; fi

  # Print logs and outputs for debugging.
  # - cat access.log
  - cat error.log
  # - cat xvfb-output
  # - cat selenium-output
  - cat ./lib/pkp/tests/results/error.log
  - for f in lib/pkp/tests/results/*.png; do echo ============== START ${f} ================== ; cat $f | base64 ; echo ============== END ${f} ================== ; done

notifications:
  email: false
